// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/team-nerd-planet/api-server/infra/config"
	"github.com/team-nerd-planet/api-server/infra/database"
	"github.com/team-nerd-planet/api-server/infra/database/repository"
	"github.com/team-nerd-planet/api-server/infra/router"
	"github.com/team-nerd-planet/api-server/internal/controller/rest"
	"github.com/team-nerd-planet/api-server/internal/usecase/feed"
	"github.com/team-nerd-planet/api-server/internal/usecase/item"
	"github.com/team-nerd-planet/api-server/internal/usecase/subscription"
	"github.com/team-nerd-planet/api-server/internal/usecase/tag"
)

// Injectors from wire.go:

func InitServer() (router.Router, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return router.Router{}, err
	}
	databaseDatabase, err := database.NewDatabase(configConfig)
	if err != nil {
		return router.Router{}, err
	}
	itemRepo := repository.NewItemRepo(databaseDatabase)
	itemUsecase := item.NewItemUsecase(itemRepo)
	itemController := rest.NewItemController(itemUsecase)
	jobTagRepo := repository.NewJobTagRepo(databaseDatabase)
	jobTagUsecase := tag.NewJobTagUsecase(jobTagRepo)
	skillTagRepo := repository.NewSkillTagRepo(databaseDatabase)
	skillTagUsecase := tag.NewSkillTagUsecase(skillTagRepo)
	tagController := rest.NewTagController(jobTagUsecase, skillTagUsecase)
	subscriptionRepo := repository.NewSubscriptionRepo(databaseDatabase)
	subscriptionUsecase := subscription.NewSubscriptionUsecase(subscriptionRepo, configConfig)
	subscriptionController := rest.NewSubscriptionController(subscriptionUsecase)
	feedRepo := repository.NewFeedRepo(databaseDatabase)
	feedUsecase := feed.NewFeedUsecase(feedRepo)
	feedController := rest.NewFeedController(feedUsecase)
	routerRouter := router.NewRouter(configConfig, itemController, tagController, subscriptionController, feedController)
	return routerRouter, nil
}
